{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Oleh Dzenhliuk\\\\Downloads\\\\form-forked\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Oleh Dzenhliuk\\\\Downloads\\\\form-forked\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Oleh Dzenhliuk\\\\Downloads\\\\form-forked\\\\src\\\\components\\\\Form\\\\Main.js\";\nimport React, { useState } from \"react\";\nimport Field from \"./partials/Field\";\nimport Button from \"./partials/Button\";\nimport { submitBtn, editBtn, cancelBtn } from \"./Data\"; // import generateId from \"../helpers/idGenerator\";\n\nimport \"./Main.css\";\n\nvar generateId = text => {\n  return text.replace(/\\s+/g, \"\").toLowerCase();\n};\n\nvar Form = ({\n  title,\n  fields\n}) => {\n  var fieldsWithId = fields.map(field => _objectSpread(_objectSpread({}, field), {}, {\n    id: field.id ? field.id : generateId(field.label)\n  }));\n\n  var _useState = useState(fieldsWithId),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var checkData = () => {\n    return values.filter(value => value.id !== undefined | value.id !== \"\").length > 0 ? true : false;\n  };\n\n  var submitControl = checkData() ? editBtn : submitBtn;\n\n  var handleChange = event => {\n    var index = values.findIndex(element => element.id === event.target.id);\n    var newArray = [...values];\n    newArray[index] = _objectSpread(_objectSpread({}, newArray[index]), {}, {\n      value: event.target.value\n    });\n    setValues(newArray);\n  };\n\n  var handleSubmit = () => {\n    var output = values.map(({\n      label,\n      value\n    }) => \"\".concat(label, \": \").concat(value, \"\\r\\n\"));\n    console.log(...output);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \" \", title, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, values.map(field => /*#__PURE__*/React.createElement(Field, Object.assign({\n    key: field.label\n  }, field, {\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form__controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, Object.assign({}, cancelBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, Object.assign({}, submitControl, {\n    handleClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }))));\n};\n\nForm.defaultProps = {\n  title: \"My Form\"\n};\nexport default Form;","map":{"version":3,"sources":["C:/Users/Oleh Dzenhliuk/Downloads/form-forked/src/components/Form/Main.js"],"names":["React","useState","Field","Button","submitBtn","editBtn","cancelBtn","generateId","text","replace","toLowerCase","Form","title","fields","fieldsWithId","map","field","id","label","values","setValues","checkData","filter","value","undefined","length","submitControl","handleChange","event","index","findIndex","element","target","newArray","handleSubmit","output","console","log","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Field from \"./partials/Field\";\r\nimport Button from \"./partials/Button\";\r\nimport { submitBtn, editBtn, cancelBtn } from \"./Data\";\r\n// import generateId from \"../helpers/idGenerator\";\r\n\r\nimport \"./Main.css\";\r\n\r\nconst generateId = (text) => {\r\n  return text.replace(/\\s+/g, \"\").toLowerCase();\r\n};\r\n\r\nconst Form = ({ title, fields }) => {\r\n  const fieldsWithId = fields.map((field) => ({\r\n    ...field,\r\n    id: field.id ? field.id : generateId(field.label)\r\n  }));\r\n  const [values, setValues] = useState(fieldsWithId);\r\n  const checkData = () => {\r\n    return values.filter(\r\n      (value) => (value.id !== undefined) | (value.id !== \"\")\r\n    ).length > 0\r\n      ? true\r\n      : false;\r\n  };\r\n  const submitControl = checkData() ? editBtn : submitBtn;\r\n  const handleChange = (event) => {\r\n    let index = values.findIndex((element) => element.id === event.target.id);\r\n    let newArray = [...values];\r\n    newArray[index] = { ...newArray[index], value: event.target.value };\r\n    setValues(newArray);\r\n  };\r\n  const handleSubmit = () => {\r\n    const output = values.map(({ label, value }) => `${label}: ${value}\\r\\n`);\r\n    console.log(...output);\r\n  };\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"form__header\">\r\n        <h2> {title} </h2>\r\n      </div>\r\n      <div className=\"form__content\">\r\n        {values.map((field) => (\r\n          <Field key={field.label} {...field} handleChange={handleChange} />\r\n        ))}\r\n      </div>\r\n      <div className=\"form__controls\">\r\n        <Button {...cancelBtn} />\r\n        <Button {...submitControl} handleClick={handleSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nForm.defaultProps = {\r\n  title: \"My Form\"\r\n};\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}